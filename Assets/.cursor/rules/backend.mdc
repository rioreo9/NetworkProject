
## ディレクトリ構造と機能のみ記入してね

### Scripts/ - メインロジック
プロジェクトのコア機能を担当するスクリプト群

#### Core/ - コアシステム
- **Container/**: 依存性注入システム
  - `ProjectInstaller.cs`: VContainerベースのDI設定、VitalRouter統合、システム間の依存関係管理
- `GameFlowHandler.cs`: ゲーム全体のフロー制御、ステート管理（VitalRouter統合）
- **Wave/**: ウェーブ管理システム（実装完了）
  - `WaveHandler.cs`: ウェーブベースの敵スポーンシステム、ゲーム進行管理
  - `EnemyCoordinator.cs`: 敵の生死管理、ウェーブクリア判定（実装完了）
  - `WaveConfiguration.cs`: ウェーブデータ設定（ScriptableObject）
- **Inter/**: インターフェース定義
  - `IGameStateNotice.cs`: ゲーム状態通知インターフェース

#### Bullet/ - 弾丸システム（実装完了）
- `BulletMove.cs`: ネットワーク同期対応弾丸移動システム
  - Photon Fusion2のラグ補償機能使用
  - TickTimerベース寿命管理
  - ネットワーク同期対応完了
  - IDamageableインターフェース対応当たり判定実装

#### Character/ - キャラクター関連
- **Animation/**: アニメーションシステム
  - `AnimationConductor.cs`: キャラクターアニメーション制御
- **Camera/**: カメラシステム
  - `PlayerAvatarView.cs`: Cinemachineカメラの優先度制御
- **Input/**: 入力システム
  - `InputManager.cs`: Unity Input Systemを使用したプレイヤー入力管理
  - `GameInput.cs`: 自動生成された入力アクション
  - `PlayerNetworkInput.cs`: ネットワーク入力構造体定義
- **Pys/**: 物理・移動システム
  - `PlayerMovement.cs`: ネットワーク対応プレイヤー移動制御 + 射撃システム統合
  - `PlayerMove.cs`: 基本移動機能
  - `PlayerJump.cs`: ジャンプ機能
  - `RotationMove.cs`: 回転制御
  - `PlayerPhysicsMove.cs`: 物理演算対応移動
- **Enemy/**: 敵キャラクターシステム
  - **AI/**: 敵AI制御システム（実装完了）
    - `EnemyAIBrainState.cs`: AI状態管理システム
    - **States/**: AI状態実装
      - `IEnemyState.cs`: 敵状態インターフェース
      - `EnemyIdleState.cs`: 待機状態
      - `EnemyChaseState.cs`: 追跡状態
      - `EnemyAttackState.cs`: 攻撃状態
      - `EnemyDeadState.cs`: 死亡状態
  - **Combat/**: 戦闘システム（実装中）
  - **Core/**: 敵の基本クラス群
    - `BaseEnemy.cs`: 敵キャラクターの基底クラス（実装完了）
  - **Spawning/**: 敵スポーンシステム
    - `WaveSpawner.cs`: ウェーブベースの敵スポーン管理（実装完了）
  - **Types/**: 敵タイプ実装
    - `EnemyShooter.cs`: 射撃型敵の実装
    - `EnemyWakame.cs`: ワカメ型敵の実装（攻撃ロジック実装済み）
- `PlayerAvatar.cs`: メインプレイヤーアバターコントローラー
- `ISetPlayerInformation.cs`: プレイヤー情報設定インターフェース
- `NetworkedDamageable.cs`: ネットワーク対応ダメージ処理システム（実装完了）

#### NetWork/ - ネットワーク機能
- `GameLauncher.cs`: Photon Fusionセッション管理とプレイヤー接続制御
- `PhotonConnectionTest.cs`: 接続テスト機能、リージョン別接続テスト対応

#### InteractObjectScripts/ - インタラクションシステム
戦艦内設備操作のためのインタラクション機能
- `BaseInteractObject.cs`: インタラクト可能オブジェクトの基底クラス
- `BaseInteractButtonObject.cs`: ボタン型インタラクトオブジェクト
- `IInteractableControllable.cs`: 操縦可能オブジェクトのインターフェース
- `IInteractableButton.cs`: ボタンインタラクションインターフェース
- `IInteractableTool.cs`: ツール型インタラクションインターフェース
- `InteractiveSwitch.cs`: スイッチ型インタラクションオブジェクト
- `GunEmplacementController.cs`: 砲台操縦システム
- **AttackObject/**: 攻撃系インタラクション
  - `LaserGun.cs`: レーザー砲システム
- **Shield/**: シールド関連インタラクション
  - `ShieldChargePot.cs`: シールド充電ポッド
  - `ShieldRepairStation.cs`: シールド修理ステーション

#### Ship/ - 戦艦システム
- **Shield/**: 戦艦シールドシステム
  - `ShipShieldSystem.cs`: シールドシステムのメイン制御
  - `ShipShieldDurability.cs`: シールド耐久値管理
  - `ShipShieldVisualizer.cs`: シールド視覚エフェクト制御

#### UI/ - ユーザーインターフェース
- **Base/**: UI基底クラス
  - `PhaseEndButtonBase.cs`: フェーズ終了ボタンの基底クラス
- `PreparationEndButton.cs`: 準備フェーズ終了ボタン
- `UpgradePhaseEndButton.cs`: アップグレードフェーズ終了ボタン
- `ShipShieldButton.cs`: シールド操作ボタン

#### Utility/ - ユーティリティ
- `TransformCalculation.cs`: カメラ基準の移動方向計算
- `GameObjectExtensions.cs`: GameObjectの拡張メソッド群

#### SubEditor/ - エディター拡張
- `RequiredAttribute.cs`: 必須フィールド検証属性

### Scene/ - シーン構成
- **NetWorkTest/**: ネットワーク機能テストシーン群
- **PhotoReal/**: フォトリアリスティック描画テストシーン群

### Prefab/ - プレハブ構成
- **Character/**: キャラクター関連プレハブ
  - **Enemy/**: 敵キャラクタープレハブ群
- **Object/**: ゲームオブジェクトプレハブ
  - **Bullet/**: 弾丸プレハブ（実装完了）

### Photon/ - Photon Fusion2関連（Build 920）
Photon Fusion2の機能とアセット
- **Fusion/**: メインライブラリ
  - **Assemblies/**: コンパイル済みライブラリ群
    - `Fusion.Runtime.dll`: Fusionランタイムライブラリ
    - `Fusion.Common.dll`: 共通ライブラリ
    - `Fusion.Realtime.dll`: リアルタイム通信ライブラリ
    - `Fusion.Sockets.dll`: ソケット通信ライブラリ
    - `Fusion.Log.dll`: ログライブラリ
  - **Runtime/**: ランタイムコンポーネント
    - `Fusion.Unity.cs`: Unity統合機能
    - `NetworkCharacterController.cs`: ネットワーク対応キャラクターコントローラー
    - `NetworkObjectProviderDefault.cs`: ネットワークオブジェクトプロバイダー
    - `NetworkSceneManagerDefault.cs`: ネットワークシーン管理
    - **Statistics/**: 統計・デバッグ機能
      - `FusionStatistics.cs`: Fusion統計情報
      - `FusionStatsCanvas.cs`: 統計UI表示
  - **Editor/**: エディター拡張
    - `FusionHubWindow.cs`: Fusion統合ウィンドウ
    - `NetworkPrefabsInspector.cs`: ネットワークプレハブインスペクター
  - **Resources/**: ネットワーク設定ファイル
    - `NetworkProjectConfig.fusion`: ネットワークプロジェクト設定
  - **CodeGen/**: Fusionコード生成機能
    - `Fusion.CodeGen.cs`: コード生成システム
  - **Plugins/**: ネイティブライブラリ
    - **NanoSockets/**: 高性能ソケットライブラリ（各プラットフォーム対応）
- **FusionDemos/**: サンプルコード・デモシーン
- **FusionMenu/**: メニューシステム
- **PhotonLibs/**: Photonライブラリ群
  - **WebSocket/**: WebSocket通信ライブラリ
    - `SocketWebTcp.cs`: WebSocket TCP実装
    - `WebSocket.cs`: WebSocket基本クラス
- **PhotonUnityNetworking/**: Photon Unity Networking設定

### Docs/ - ドキュメント
プロジェクト関連ドキュメント群
- `敵システム仕様書.md`: 敵システムの詳細仕様
- `Enemyフォルダ_仕様まとめ.md`: 敵フォルダ構成の仕様まとめ
- `FusionのObjectpoolとはなにかﾈｯﾄﾘ.md`: Fusionオブジェクトプールの解説
- `Runnerとは.md`: Fusionランナーの解説
- `SerializeField_Requiredとは.md`: Required属性の解説
- `ラムダ式とは.md`: ラムダ式の解説

### Settings/ - プロジェクト設定
- **HDRPDefaultResources/**: HDRPデフォルトリソース
  - HDRP設定ファイル群

### Editor/ - エディター機能
- `AutoSave.cs`: 自動保存機能（変更検知・プレイモード保存対応）
- `Attribute.cs`: カスタム属性定義
- `EmptyFieldWarningEditor.cs`: 空フィールド警告エディター
- `SubClassGenerator.cs`: サブクラス生成ツール

### Animation/ - アニメーション
- **Character/**: キャラクターアニメーション
- **Object/**: オブジェクトアニメーション

### Material/ - マテリアル
プロジェクト用マテリアル群

### VisualPackage/ - ビジュアルパッケージ
ビジュアル関連のパッケージ・アセット群

### 入力システム設定
- `GameInput.inputactions`: メインゲーム入力設定
- `InputSystem_Actions.inputactions`: Input System アクション設定